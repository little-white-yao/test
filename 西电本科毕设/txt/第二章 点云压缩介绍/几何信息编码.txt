点云数据中一般存储着几何坐标、颜色、法线等信息。其中几何信息是必不可少的，它在物体的三维重建过程中起着决定性的作用。点云的几何形状通常用特定于应用程序的空间表示，其中点的位置可以用浮点数表示。因此，可能需要一个预处理步骤，将应用程序特定的空间转换为有限分辨率的内部空间。几何信息预处理的步骤一般包括：坐标转换，坐标量化、重复点去除。其具体过程如下：
1.坐标转换
获取到的原始点云中，各个点的位置通常是无规则的，并且通常由浮点数表示。因此，为了方便后续对几何信息进行压缩，首先将原始坐标系中点的位置坐标Xn（orig）用公式x转换为内部坐标系下的坐标Xn（int）。
其中，T=。参数T和s由包围盒【】中的点位置坐标X。。。N（其中 D 是非负整数参数）决定。

当采用八叉树几何编码时，——————

是最小的包围盒，所有的内部点位置坐标都在这个边长为 2d 的立方体内。

当采用Trisoup几何编码时，——————
2.坐标量化
在压缩之前，点位置坐标在内部被表示为 d 位非负整数。为了获得这些整数，点的位置坐标在内部坐标系中被量化取整。设Xnint表示内部坐标系中的点位置坐标，量化公式如下面的公式（2-4）所示
3.重复点去除
量化之后会产生大量位置坐标相同的点，称为重复点。可以将具有相同量化坐标的重复点进行删除操作。坐标量化和删除重复点的过程称为体素化，也就是将一个体素内的所有点都量化到体素中心。如果一个体素内包含任意点云中的点，则称该体素被占用。
4.八叉树编码
八叉树是一种自顶向下的广度优先的树状数据结构，它可以用来存储表示三维空间物体和场景的几何信息。八叉树中的每个节点都代表着一个对应的正方体。对于每个非空的节点，可以将其继续划分为八个子节点，直至划分到叶子节点，即指定精度下的三维空间的最小单元。
######岳紫辉，田腾亚#########
5.trisoup编码
########中期报告##########
几何图形在每个块中表示为一个至多与块的每条边相交一次的曲面。由于一个块有 12 条边，所以在一个块中最多可以有 12 个这样的交点。每一个这样的交点称为顶点。当且仅当共享该边的所有块中与该边相邻的块中至少有一个已占用的体素时，才能检测到沿该边的顶点。检测到的顶点沿边的位置是共享该边的所有块中，所有与该边相邻的体素沿边的顶点的平均位置。
顶点信息包含两部分：一个是标识信息，即标识所有被占据的叶子节点中哪些边上有顶点，也称为边被占据，被占据标识为 1，不被占据标识为 0；另一个是顶点位置信息，对于每个被占据的边，顶点位置信息被量化为 2bit。最后利用算数编码器对标识信息与顶点位置信息进行熵编码。
根据三角形投影面积大小确定主导轴、求出质心坐标以及质心偏移量、根据方位角信息对顶点进行排序。最后我们将顶点与质心组合，构建三角面片。
以三角面片在主轴方向上的投影面为射线起点，射线追踪的间隔由高层语法元素决定，同时会根据重建后的点云数量改变间隔大小。射线追踪采样的核心是利用 Muller-Trumbore 算法，判定射线是否与三角面片有交点，产生的交点便是重建点云。
6.动态OBUF

